# POT file for the Calculate activity
# Copyright (C) 2007
# This file is distributed under the same license as the Calculate package.
# Reinier Heeres <reinier@heeres.eu>, 2007
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 17:39+1100\n"
"PO-Revision-Date: 2017-03-16 05:06+0000\n"
"Last-Translator: Chris <cjl@sugarlabs.org>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ro\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < "
"20)) ? 1 : 2);;\n"
"X-Generator: Pootle 2.5.1.1\n"
"X-POOTLE-MTIME: 1489640776.000000\n"

#: activity/activity.info:2
msgid "Calculate"
msgstr "Calculează"

#: functions.py:35
msgid "add"
msgstr "adaugă"

#: functions.py:36
msgid "abs"
msgstr "abs"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:37
msgid "acos"
msgstr "acos"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:38
msgid "acosh"
msgstr "acosh"

#: functions.py:39
msgid "asin"
msgstr "asin"

#: functions.py:40
msgid "asinh"
msgstr "asinh"

#: functions.py:41
msgid "atan"
msgstr "atan"

#: functions.py:42
msgid "atanh"
msgstr "atanh"

#: functions.py:43
msgid "and"
msgstr "and"

#: functions.py:44
msgid "b10bin"
msgstr "b10bin"

#: functions.py:45
msgid "ceil"
msgstr "plafon"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:46
msgid "cos"
msgstr "cos"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:47
msgid "cosh"
msgstr "cosh"

#: functions.py:48
msgid "div"
msgstr "div"

#: functions.py:49
msgid "gcd"
msgstr "cmmdc"

#: functions.py:50
msgid "exp"
msgstr "exp(x)"

#: functions.py:51
msgid "factorial"
msgstr "factorial"

#: functions.py:52
msgid "factorize"
msgstr "factorizează"

#: functions.py:53
msgid "floor"
msgstr "Podea"

#: functions.py:54
msgid "inv"
msgstr "inv"

#: functions.py:55
msgid "is_int"
msgstr "is_int"

#: functions.py:56
msgid "is_prime"
msgstr ""

#: functions.py:57
msgid "ln"
msgstr "ln"

#: functions.py:58
msgid "log10"
msgstr "log10"

#: functions.py:59
msgid "mul"
msgstr "mul"

#: functions.py:60
msgid "or"
msgstr "sau"

#: functions.py:61
msgid "rand_float"
msgstr "Rand_float"

#: functions.py:62
msgid "rand_int"
msgstr "rand_int"

#: functions.py:63
msgid "round"
msgstr "rotunjire"

#: functions.py:64
msgid "sin"
msgstr "sin"

#: functions.py:65
msgid "sinh"
msgstr "sinh"

#: functions.py:66
msgid "sinc"
msgstr "sinc"

#: functions.py:67
msgid "sqrt"
msgstr "sqrt"

#: functions.py:68
msgid "sub"
msgstr "sub"

#: functions.py:69
msgid "square"
msgstr "Pătrat"

#: functions.py:70
msgid "tan"
msgstr "tan"

#: functions.py:71
msgid "tanh"
msgstr "tanh"

#: functions.py:72
msgid "xor"
msgstr "xor"

#: functions.py:119
msgid "abs(x), return absolute value of x, which means -x for x < 0"
msgstr ""
"abs (x) returnează valoarea absolută a lui x, ceea ce înseamnă că, dacă -x "
"pentru x <0"

#: functions.py:124
msgid "acos(x) only defined for x E [-1,1]"
msgstr ""

#: functions.py:128
msgid ""
"acos(x), return the arc cosine of x. This is the angle for which the cosine "
"is x. Defined for -1 <= x < 1"
msgstr ""
"acos(x), returnează arc cosinusul lui x. Acesta este unghiul pentru care "
"cosinusul este x. Definit pentru -1 <= x < 1"

#: functions.py:135
msgid ""
"acosh(x), return the arc hyperbolic cosine of x. This is the value y for "
"which the hyperbolic cosine equals x."
msgstr ""
"ACOSH (x) returnează arccosinusul hiperbolic al lui x. Aceasta este valoarea "
"lui y pentru care cosinusul hiperbolic este x."

#: functions.py:142
msgid ""
"And(x, y), logical and. Returns True if x and y are True,else returns False"
msgstr ""

#: functions.py:151
msgid "add(x, y), return x + y"
msgstr "Suma (x, y), întoarcere x + y"

#: functions.py:156
msgid "asin(x) only defined for x E [-1,1]"
msgstr ""

#: functions.py:159
msgid ""
"asin(x), return the arc sine of x. This is the angle for which the sine is "
"x. Defined for -1 <= x <= 1"
msgstr ""
"acos(x), returnează arc cosinusul lui x. Acesta este unghiul pentru care "
"cosinusul este x. Definit pentru -1 <= x < 1"

#: functions.py:166
msgid ""
"asinh(x), return the arc hyperbolic sine of x. This is the value y for which "
"the hyperbolic sine equals x."
msgstr ""
"ASINH (x), returnează arcsinusul hiperbolic al lui x. Aceasta este valoarea "
"lui y pentru care sinusul hiperbolic este x."

#: functions.py:173
msgid ""
"atan(x), return the arc tangent of x. This is the angle for which the "
"tangent is x. Defined for all x"
msgstr ""
"acos(x), returnează arc cosinusul lui x. Acesta este unghiul pentru care "
"cosinusul este x. Definit pentru -1 <= x < 1"

#: functions.py:180
msgid ""
"atanh(x), return the arc hyperbolic tangent of x. This is the value y for "
"which the hyperbolic tangent equals x."
msgstr ""
"tanh (x), returnează arctangenta hiperbolică al lui x. Aceasta este valoarea "
"lui y pentru care tangenta hiperbolică este x."

#: functions.py:191
msgid "Number does not look binary."
msgstr ""

#: functions.py:199
msgid ""
"b10bin(x), interpret a number written in base 10 as binary, e.g.: "
"b10bin(10111) = 23,"
msgstr ""
"b10bin (x), joacă un număr scris în baza 10 ca binar, de exemplu:. b10bin "
"(10111) = 23,"

#: functions.py:205
msgid "ceil(x), return the smallest integer larger than x."
msgstr "ceil (x) returnează cel mai mic întreg mai mare decât x"

#: functions.py:211
msgid ""
"cos(x), return the cosine of x. This is the x-coordinate on the unit circle "
"at the angle x"
msgstr ""
"cos (x) întoarce cosinusul lui x. Aceasta este coordonata X de pe unitatea "
"de cerc cu un unghi x"

#: functions.py:218
msgid ""
"cosh(x), return the hyperbolic cosine of x.Given by (exp(x) + exp(-x)) / 2"
msgstr ""

#: functions.py:224 functions.py:319
msgid "Can not divide by zero"
msgstr "Nu puteți diviza la zero"

#: functions.py:247
msgid "Invalid argument"
msgstr "Argument nevalid"

#: functions.py:250
msgid ""
"gcd(a, b), determine the greatest common denominator of a and b. For "
"example, the biggest factor that is shared by the numbers 15 and 18 is 3."
msgstr ""
"GCD (a, b) determină cel mai mare divizor comun între a și b. De exemplu, "
"cel mai mare factor care împarte numerele 15 și 18 este 3."

#: functions.py:257
msgid "exp(x), return the natural exponent of x. Given by e^x"
msgstr "exp (x), returnează exponent natural al x. Dat de e ^ x"

#: functions.py:262
msgid "Factorial(x) is only defined for integers x>=0"
msgstr ""

#: functions.py:265
msgid "Factorial only defined for integers"
msgstr "Factorial este definit numai pentru numere întregi"

#: functions.py:278
msgid ""
"factorial(n), return the factorial of n. Given by n * (n - 1) * (n - 2) * ..."
msgstr ""
"factorială (x) returneaza factorialul lui x. Dat de x * (x - 1) * (x - 2) * "
"..."

#: functions.py:314
msgid "floor(x), return the largest integer smaller than x."
msgstr "podea (x) returnează cel mai mare întreg mai mic decât x."

#: functions.py:321
msgid "inv(x), return the inverse of x, which is 1 / x"
msgstr "inv (x) returneaza inversul lui x, care este de 1 / x"

#: functions.py:356
msgid "Argument must be int"
msgstr ""

#: functions.py:358
msgid "Prime numbers is defined for natural numbers"
msgstr ""

#: functions.py:368 functions.py:378
msgid "Logarithm(x) only defined for x > 0"
msgstr "Logaritm (x) definit numai pentru x> 0"

#: functions.py:370
msgid ""
"ln(x), return the natural logarithm of x. This is the value for which the "
"exponent exp() equals x. Defined for x >= 0."
msgstr ""
"ln(x), returnează logaritmul natural din x. Acesta este valoarea pentru care "
"exponentul exp() este egal cu x. Definit pentru x >= 0."

#: functions.py:380
msgid ""
"log10(x), return the base 10 logarithm of x. This is the value y for which "
"10^y equals x. Defined for x >= 0."
msgstr ""
"log10 (x) returnează logaritmul în baza 10 x. Aceasta este valoarea pentru "
"care 10 ^ și este egal cu x. Definite pentru x> = 0."

#: functions.py:388
msgid "Can only calculate x modulo <integer>"
msgstr "Puteți calcula numai x modulul <INTEGER>"

#: functions.py:390
msgid ""
"mod(x, y), return the modulus of x with respect to y.This is the remainder "
"after dividing x by y."
msgstr ""

#: functions.py:399
msgid "mul(x, y), return x * y"
msgstr "Mul (x, y), întoarce x * y"

#: functions.py:404
msgid "negate(x), return -x"
msgstr "Negate (x), întoarce -X"

#: functions.py:410
msgid ""
"Or(x, y), logical or. Returns True if x or y is True, else returns False"
msgstr ""
"Sau (x, y), \"sau\" logic, returnează true dacă x / y este adevărat, altfel "
"returnează False"

#: functions.py:427
msgid "pow(x, y), return x to the power y (x**y)"
msgstr "pow (x, y), întoarce x la puterea y (x ** y)"

#: functions.py:433
msgid "rand_float(), return a random floating point number between 0.0 and 1.0"
msgstr "rand_float () returnează un număr de punct aleator între 0,0 și 1,0"

#: functions.py:439
msgid ""
"rand_int([<maxval>]), return a random integer between 0 and <maxval>. "
"<maxval> is an optional argument and is set to 65535 by default."
msgstr ""
"int rand ([<MAXVALUE>]), returnează un număr întreg aleator între 0 și "
"<maxval>. <Maxval> este un argument opțional și are ca valore implicită "
"65535 ."

#: functions.py:445
msgid "round(x), return the integer nearest to x."
msgstr "round (x) returneaza cel mai apropiat întreg la x."

#: functions.py:452 functions.py:461
msgid "Bitwise operations only apply to integers"
msgstr "Operațiuni de bit se aplică numai la întregi"

#: functions.py:454
msgid "shift_left(x, y), shift x by y bits to the left (multiply by 2 per bit)"
msgstr ""
"shift_left (x, y), mută la stânga pe x pentru y biți (înmulțeste cu 2 "
"fiecare bit)"

#: functions.py:463
msgid "shift_right(x, y), shift x by y bits to the right (divide by 2 per bit)"
msgstr ""
"shift_right (x, y), mută la dreapta pe x cu y biți (împărțiti la 2 fiecare "
"bit)"

#: functions.py:469
msgid ""
"sin(x), return the sine of x. This is the y-coordinate on the unit circle at "
"the angle x"
msgstr ""
"sin (x) întoarce sinusul lui x. Aceasta este coordonata y in cercul unitar "
"in unghiul x"

#: functions.py:476
msgid ""
"sinh(x), return the hyperbolic sine of x. Given by (exp(x) - exp(-x)) / 2"
msgstr ""
"Sinh (x), întoarce sinusul hiperbolic al lui x. Dat de (exp (x) - exp (-x)) /"
" 2"

#: functions.py:485
msgid "sinc(x), return the sinc of x. This is given by sin(x) / x."
msgstr "sinc (x) întoarce sinusul cardinal al lui x. Dat de sin (x) / x."

#: functions.py:491
msgid ""
"sqrt(x), return the square root of x. This is the value for which the square "
"equals x. Defined for x >= 0."
msgstr ""
"sqrt (x) Returnează rădăcina pătrată a lui x. Aceasta este valoarea pentru "
"care pătratul este egal cu x. Definite pentru x> = 0."

#: functions.py:497
msgid "square(x), return x * x"
msgstr "pătrat (x) returneaza x * x"

#: functions.py:505
msgid "sub(x, y), return x - y"
msgstr "Sub (x, y), întoarce x - y"

#: functions.py:511
msgid ""
"tan(x), return the tangent of x. This is the slope of the line from the "
"origin of the unit circle to the point on the unit circle defined by the "
"angle x. Given by sin(x) / cos(x)"
msgstr ""
"tan (x) Returnează tangenta lui x. Aceasta este panta liniei de la originea "
"unității circulare pana la punctul de pe cercul definit de unghiul x. Dat de "
"sin (x) / cos (x)"

#: functions.py:519
msgid "tanh(x), return the hyperbolic tangent of x. Given by sinh(x) / cosh(x)"
msgstr ""
"tanh (x), întoarce tangenta hiperbolică al lui x. Dat de Sinh (x) / cosh (x)"

#: functions.py:525
msgid ""
"xor(x, y), logical xor. Returns True if either x is True (and y is False) or "
"y is True (and x is False), else returns False"
msgstr ""
"XOR (xy), XOR logic. Returnează true dacă x este adevărat (și y este False) "
"sau dacă y este adevărat (și X este fals), în caz contrar se returnează False"

#: toolbars.py:57
msgid "Help"
msgstr "Ajutor"

#: toolbars.py:132
msgid "Copy"
msgstr "Copiază"

#: toolbars.py:133
msgid "<ctrl>c"
msgstr "<ctrl>c"

#: toolbars.py:137
msgid "Cut"
msgstr "Tăiere"

#: toolbars.py:140
msgid "<ctrl>x"
msgstr "<ctrl>x"

#: toolbars.py:148
msgid "Paste"
msgstr "Lipire"

#: toolbars.py:160
msgid "Square"
msgstr "Pătrat"

#: toolbars.py:167
msgid "Square root"
msgstr "Rădăcină pătrată"

#: toolbars.py:174
msgid "Inverse"
msgstr "Inversare"

#: toolbars.py:183
msgid "e to the power x"
msgstr "e la puterea x"

#: toolbars.py:190
msgid "x to the power y"
msgstr "x la puterea y"

#: toolbars.py:197
msgid "Natural logarithm"
msgstr "Logaritm natural"

#: toolbars.py:206
msgid "Factorial"
msgstr "Factorial"

#: toolbars.py:220
msgid "Sine"
msgstr "Sinus"

#: toolbars.py:225
msgid "Cosine"
msgstr "Cosinus"

#: toolbars.py:230
msgid "Tangent"
msgstr "Tangentă"

#: toolbars.py:237
msgid "Arc sine"
msgstr "Arcsinus"

#: toolbars.py:242
msgid "Arc cosine"
msgstr "Arccosinus"

#: toolbars.py:247
msgid "Arc tangent"
msgstr "Arctangentă"

#: toolbars.py:254
msgid "Hyperbolic sine"
msgstr "Sinus hiperbolic"

#: toolbars.py:259
msgid "Hyperbolic cosine"
msgstr "Cosinus hiperbolic"

#: toolbars.py:264
msgid "Hyperbolic tangent"
msgstr "Tangentă hiperbolică"

#: toolbars.py:277
msgid "Logical and"
msgstr "Logică și"

#: toolbars.py:282
msgid "Logical or"
msgstr "Logică sau"

#: toolbars.py:293
msgid "Equals"
msgstr "Egal"

#: toolbars.py:297
msgid "Not equals"
msgstr "Non-egal"

#: toolbars.py:310
msgid "Pi"
msgstr "Pi"

#: toolbars.py:316
msgid "e"
msgstr "e"

#: toolbars.py:320
msgid "γ"
msgstr "Y"

#: toolbars.py:325
msgid "φ"
msgstr "φ"

#: toolbars.py:333
msgid "Plot"
msgstr "Grafic"

#: toolbars.py:338
msgid "Degrees"
msgstr "Grade"

#: toolbars.py:339
msgid "Radians"
msgstr "Radiani"

#: toolbars.py:344
msgid "Degrees / Radians"
msgstr "Grade/Radiani"

#: toolbars.py:354
msgid "Exponent / Scientific notation"
msgstr "Exponent / Notație științifică"

#: toolbars.py:365
msgid "Number of shown digits"
msgstr "Număr de cifre vizibile"

#: toolbars.py:377
msgid "Integer formatting base"
msgstr "Rădăcină"

#: astparser.py:39
msgid ""
"plot(eqn, var=-a..b), plot the equation 'eqn' with the variable 'var' in the "
"range from a to b"
msgstr ""
"plot(eqn, var=-a..b), afișează graficul ecuației 'eqn' cu variabila 'var' "
"având valori între a și b"

#: astparser.py:61
#, python-format
msgid "Parse error at %d"
msgstr "Eroare de analiză la %d"

#: astparser.py:75 astparser.py:109
#, python-format
msgid "Error at '%s', position: %d"
msgstr ""

#: astparser.py:88
msgid "Syntax Error."
msgstr ""

#: astparser.py:95
msgid "Syntax Error!"
msgstr ""

#: astparser.py:135
msgid "This is just a test topic, use help(index) for the index"
msgstr ""
"Acesta este doar un subiect de test, utilizeaza help (index) pentru indice"

#: astparser.py:148
msgid "Use help(test) for help about 'test', or help(index) for the index"
msgstr ""
"Folosiţi help(test) pentru ajutor despre „test”, sau help(index) pentru index"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:152
msgid "index"
msgstr "index"

#: astparser.py:152
msgid "topics"
msgstr "Subiecte"

#: astparser.py:153
msgid "Topics"
msgstr "Categorii"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:161
msgid "variables"
msgstr "variabile"

#: astparser.py:162
msgid "Variables"
msgstr "Variabile"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:168
msgid "functions"
msgstr "funcții"

#: astparser.py:169
msgid "Functions"
msgstr "Funcții"

#: astparser.py:178
#, python-format
msgid "No help about '%s' available, use help(index) for the index"
msgstr ""
"Nu există înformații despre '%s', foloseșe help(index) pentru a afișa lista"

#: astparser.py:508
msgid "help"
msgstr "ajutor"

#: astparser.py:515
msgid "Recursion detected"
msgstr "S-a detectat un apel recursiv"

#: astparser.py:539
#, python-format
msgid "Function '%s' not defined"
msgstr "Funcția '%s' nu este definită"

#: astparser.py:541
#, python-format
msgid "Variable '%s' not defined"
msgstr "Variabila '%s' nu este definită"

#: astparser.py:551
#, python-format
msgid "Attribute '%s' does not exist"
msgstr "Atributul '%s' inexistent"

#: astparser.py:654
msgid "Parse error"
msgstr "Eroare de analiză"

#: astparser.py:659
msgid "Multiple statements not supported"
msgstr "Nu sunt permise declarații multiple"

#: astparser.py:683
msgid "Internal error"
msgstr "Eroare internă"

#. TRANS: multiplication symbol (default: '×')
#: mathlib.py:84
msgid "mul_sym"
msgstr "x"

#. TRANS: division symbol (default: '÷')
#: mathlib.py:89
msgid "div_sym"
msgstr "÷"

#. TRANS: equal symbol (default: '=')
#: mathlib.py:94
msgid "equ_sym"
msgstr "="

#: mathlib.py:227
msgid "Undefined"
msgstr "Nedefinit"

#: mathlib.py:237
msgid "Error: unsupported type"
msgstr "Eroare: tip nesuportat"

#: layout.py:113
msgid "Clear"
msgstr "Şterge"

#: layout.py:151 layout.py:195
msgid "Edit"
msgstr "Editează"

#: layout.py:156 layout.py:196
msgid "Algebra"
msgstr "Algebră"

#: layout.py:161 layout.py:198
msgid "Trigonometry"
msgstr "Trigonometrie"

#: layout.py:166 layout.py:199
msgid "Boolean"
msgstr "Boolean"

#: layout.py:175 layout.py:200
msgid "Miscellaneous"
msgstr "Diverse"

#: layout.py:229
msgid "Label:"
msgstr "Etichetă:"

#: layout.py:278
msgid "All equations"
msgstr "Toate ecuaţiile"

#: layout.py:279
msgid "My equations"
msgstr "Ecuaţiile mele"

#: layout.py:280
msgid "Show variables"
msgstr "Afişează variabilele"

#: calculate.py:109
#, python-format
msgid "Equation.parse() string invalid (%s)"
msgstr "Equation.parse() șir de caractere invalid (%s)"

#: calculate.py:525
msgid "Can not assign label: will cause recursion"
msgstr "Nu se poate asigna eticheta: va genera recursivitate"

#: calculate.py:620
#, python-format
msgid "Writing to journal (%s)"
msgstr "Se scrie în jurnal (%s)"

#: calculate.py:932
msgid "button_pressed(): invalid type"
msgstr "button_pressed(): tip invalid"

#~ msgid ""
#~ "This is the place to get the answer to a quick problem, but that is not the "
#~ "limit! You can also explore Algebra, Trigonometry, Boolean and more!"
#~ msgstr ""
#~ "Poți găsi aici răspunsul pentru o problemă simplă, dar nu doar atât! Poți să "
#~ "explorezi și algebra, trigonometria, logica binară și multe altele!"

#, python-format
#~ msgid "Error at %d"
#~ msgstr "Eroare la %d"

#~ msgid "fac"
#~ msgstr "fac"

#~ msgid ""
#~ "And(x, y), logical and. Returns True if x and y are True, else returns False"
#~ msgstr ""
#~ "and(x, y), ŞI logic. Returnează adevărat dacă x şi y sunt adevărate, altfel "
#~ "returnează fals"

#~ msgid "Number does not look binary in base 10"
#~ msgstr "Numărul nu pare binar de bază 10"

#~ msgid ""
#~ "cosh(x), return the hyperbolic cosine of x. Given by (exp(x) + exp(-x)) / 2"
#~ msgstr ""
#~ "cosh (x) întoarce cosinusul hiperbolic al lui x. Dată de (exp (x) + exp (-x))"
#~ " / 2"

#~ msgid "fac(x), return the factorial of x. Given by x * (x - 1) * (x - 2) * ..."
#~ msgstr ""
#~ "fac (x) returneaza factorialul lui x. Dat de x * (x - 1) * (x - 2) * ..."

#~ msgid ""
#~ "mod(x, y), return the modulus of x with respect to y. This is the remainder "
#~ "after dividing x by y."
#~ msgstr ""
#~ "mod (x, y) returnează modulul x cu respect la y. Aceasta este restul "
#~ "împărțirii x cu y."
