# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 17:39+1100\n"
"PO-Revision-Date: 2015-06-29 15:00+0000\n"
"Last-Translator: EdgarQuispeChambi <equispe7@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ayc\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Pootle 2.5.1.1\n"
"X-POOTLE-MTIME: 1435590022.000000\n"

#: activity/activity.info:2
msgid "Calculate"
msgstr "Jakhsuña"

#: functions.py:35
msgid "add"
msgstr "jach'aptayaña"

#: functions.py:36
msgid "abs"
msgstr "´abs' sata wakichatanaka"

#: functions.py:37
msgid "acos"
msgstr "'acos' sata wakichatanaka"

#: functions.py:38
msgid "acosh"
msgstr "'acosh' sata wakichatanaka"

#: functions.py:39
msgid "asin"
msgstr "'asin' sata wakichatanaka"

#: functions.py:40
msgid "asinh"
msgstr "'asinh' sata wakichatanaka"

#: functions.py:41
msgid "atan"
msgstr "'atan' sata wakichatanaka"

#: functions.py:42
msgid "atanh"
msgstr "'atanh' sata wakichatanaka"

#: functions.py:43
msgid "and"
msgstr "ukata"

#: functions.py:44
msgid "b10bin"
msgstr "'b10bin' sata wakichatanaka"

#: functions.py:45
msgid "ceil"
msgstr "jakaña"

#: functions.py:46
msgid "cos"
msgstr "'cos' sata wakichatanaka"

#: functions.py:47
msgid "cosh"
msgstr "'cosh' sata wakichatanaka"

#: functions.py:48
msgid "div"
msgstr "'div' sata wakichatanaka"

#: functions.py:49
msgid "gcd"
msgstr "'mcd' sata wakichatanaka"

#: functions.py:50
msgid "exp"
msgstr "'exp' sata wakichatanaka"

#: functions.py:51
msgid "factorial"
msgstr "'factorial' sata wakichata"

#: functions.py:52
msgid "factorize"
msgstr "jaljayaña"

#: functions.py:53
msgid "floor"
msgstr "uraqi"

#: functions.py:54
msgid "inv"
msgstr "'inv' sata wakichata"

#: functions.py:55
msgid "is_int"
msgstr "'is_int' sata wakichata"

#: functions.py:56
msgid "is_prime"
msgstr ""

#: functions.py:57
msgid "ln"
msgstr "'ln' sata wakichata"

#: functions.py:58
msgid "log10"
msgstr "'log10' sata wakichata"

#: functions.py:59
msgid "mul"
msgstr "'mul' sata wakichata"

#: functions.py:60
msgid "or"
msgstr "'or' sata wakichata"

#: functions.py:61
msgid "rand_float"
msgstr "´rand_float' sata wakichata"

#: functions.py:62
msgid "rand_int"
msgstr "'rand_int' sata wakichata"

#: functions.py:63
msgid "round"
msgstr "phuqachaña"

#: functions.py:64
msgid "sin"
msgstr "'sin' sata wakichata"

#: functions.py:65
msgid "sinh"
msgstr "'sinh' sata wakichata"

#: functions.py:66
msgid "sinc"
msgstr "'sinc' sata wakichata"

#: functions.py:67
msgid "sqrt"
msgstr "'sqrt' sata wakichata"

#: functions.py:68
msgid "sub"
msgstr "'sub' sata wakichata"

#: functions.py:69
msgid "square"
msgstr "pusi k'uchuni kajuna"

#: functions.py:70
msgid "tan"
msgstr "'tan' sata wakichata"

#: functions.py:71
msgid "tanh"
msgstr "'tanh' sata wakichata"

#: functions.py:72
msgid "xor"
msgstr "'xor' sata wakichata"

#: functions.py:119
msgid "abs(x), return absolute value of x, which means -x for x < 0"
msgstr ""
"abs(x), wakichataxa uka 'x' wakisiriru chanipa kuttayi, ukasti -x ukaxa x < "
"0 uka saña muni"

#: functions.py:124
msgid "acos(x) only defined for x E [-1,1]"
msgstr ""

#: functions.py:128
msgid ""
"acos(x), return the arc cosine of x. This is the angle for which the cosine "
"is x. Defined for -1 <= x < 1"
msgstr ""
"acos(x), wakichataxa uka 'x' wakisiriru arco coseno wakisiripa kuttayi. "
"Ukapi coseno wakisiri chanipa uka 'x'. Ukasti akïriraki -1 <= x < 1"

#: functions.py:135
msgid ""
"acosh(x), return the arc hyperbolic cosine of x. This is the value y for "
"which the hyperbolic cosine equals x."
msgstr ""
"acosh(x), arco coseno hiperbólico 'x' wakisiriru kuttayi. Ukapi uka 'y' "
"wakisirina chanipaxa ukatpi coseno hiperbólico chanixa 'x' wakisiparaki."

#: functions.py:142
msgid ""
"And(x, y), logical and. Returns True if x and y are True,else returns False"
msgstr ""

#: functions.py:151
msgid "add(x, y), return x + y"
msgstr "jakhuxataña(x, y), kutsuyaña x + y"

#: functions.py:156
msgid "asin(x) only defined for x E [-1,1]"
msgstr ""

#: functions.py:159
msgid ""
"asin(x), return the arc sine of x. This is the angle for which the sine is "
"x. Defined for -1 <= x <= 1"
msgstr ""
"asin(x), wakichataxa uka arco seno x wakisiripa kuttayi. Ukasti maya k'uchu "
"chanipawa, ukatakisti seno ukaxa x wakisiripawa. Ukasti qhananchasirakiwa -1 "
"<= x <= 1"

#: functions.py:166
msgid ""
"asinh(x), return the arc hyperbolic sine of x. This is the value y for which "
"the hyperbolic sine equals x."
msgstr ""
"asinh(x), wakichataxa uka arco seno hiperbólico x wakisiripa kuttayi. Ukasti "
"y wakisiripa chanipawa, ukatakisti uka seno hiperbólico wakisiri x "
"wakichatawa."

#: functions.py:173
msgid ""
"atan(x), return the arc tangent of x. This is the angle for which the "
"tangent is x. Defined for all x"
msgstr ""
"atan(x), wakichataxa uka tangente x wakisiripa kuttayi. Ukasti maya kúchu "
"chanipawa uka tangete x ukataki wakichata. Ukasti qhananchasirakiwa taqi x "
"wakichatataki"

#: functions.py:180
msgid ""
"atanh(x), return the arc hyperbolic tangent of x. This is the value y for "
"which the hyperbolic tangent equals x."
msgstr ""
"atanh(x), wakichataxa arco tangente hiperbólico x wakisiripa kuttayi. Ukasti "
"y wakisiripa chanipawa, ukatakiisti tangente hiperbólico x wakichatana "
"wakisiripawa."

#: functions.py:191
msgid "Number does not look binary."
msgstr ""

#: functions.py:199
msgid ""
"b10bin(x), interpret a number written in base 10 as binary, e.g.: "
"b10bin(10111) = 23,"
msgstr ""
"b10bin(x), wakichataxa base 10 wakisiripana jakhu qillqata qhananchi, "
"payachatjama, akhama: b10bin(10111) = 23,"

#: functions.py:205
msgid "ceil(x), return the smallest integer larger than x."
msgstr ""
"ceil(x), wakichataxa x chanipa jila phuqata jakhuta sipana pisi jakhu "
"phuqata kuttayi."

#: functions.py:211
msgid ""
"cos(x), return the cosine of x. This is the x-coordinate on the unit circle "
"at the angle x"
msgstr ""
"cos(x), wakichataxa x coseno wakisiri chanipa kuttayi. Ukasti x cordenada "
"katupawa uka x maya k'uchu chanini maya sapa muyu taypina utji"

#: functions.py:218
msgid ""
"cosh(x), return the hyperbolic cosine of x.Given by (exp(x) + exp(-x)) / 2"
msgstr ""

#: functions.py:224 functions.py:319
msgid "Can not divide by zero"
msgstr "Jani kunani wakichataxa janiwa jaljayañjamati"

#: functions.py:247
msgid "Invalid argument"
msgstr "Jani wakisiri qhanancha"

#: functions.py:250
msgid ""
"gcd(a, b), determine the greatest common denominator of a and b. For "
"example, the biggest factor that is shared by the numbers 15 and 18 is 3."
msgstr ""
"gcd(a, b), uka wakichataxa a ukata b chaninakapampi máximo común divisor "
"chanipa apsuraki. Sañäni, 15 ukata 18 jakhunakaru 3 jilïri jakuwa jaljtayi."

#: functions.py:257
msgid "exp(x), return the natural exponent of x. Given by e^x"
msgstr "exp(x), uka wakichataxa x chaniparu wakisiri exponente natural kuttayi"

#: functions.py:262
msgid "Factorial(x) is only defined for integers x>=0"
msgstr ""

#: functions.py:265
msgid "Factorial only defined for integers"
msgstr "Factorial wakichataxa phuqata jakhunakataki wakichatawa"

#: functions.py:278
msgid ""
"factorial(n), return the factorial of n. Given by n * (n - 1) * (n - 2) * ..."
msgstr ""
"factorial(x), uka wakichataxa x factorial chanipa kuttayi. Ukasti akhamata "
"phuqasiraki x * (x - 1) * (x - 2) * ..."

#: functions.py:314
msgid "floor(x), return the largest integer smaller than x."
msgstr ""
"floor(x), uka wakichataxa x chanipa arkirita jila jakhu phuqata kuttayi."

#: functions.py:321
msgid "inv(x), return the inverse of x, which is 1 / x"
msgstr ""
"inv(x), uka wakichataxa x chanipa maynipa kuttayi, ukasti akhamata 1 / x"

#: functions.py:356
msgid "Argument must be int"
msgstr ""

#: functions.py:358
msgid "Prime numbers is defined for natural numbers"
msgstr ""

#: functions.py:368 functions.py:378
msgid "Logarithm(x) only defined for x > 0"
msgstr "Logarithm(x) uka wakichataxa akhmataki wakichatawa x > 0"

#: functions.py:370
msgid ""
"ln(x), return the natural logarithm of x. This is the value for which the "
"exponent exp() equals x. Defined for x >= 0."
msgstr ""
"ln(x),uka wakichataxa x algoritmo natural chanipa kuttayi. Uka chanitakipi "
"uka exponente exp() chanipaxa x chanipa khuskhakiwa. Ukasti akhamata "
"phuqasiraki x >= 0."

#: functions.py:380
msgid ""
"log10(x), return the base 10 logarithm of x. This is the value y for which "
"10^y equals x. Defined for x >= 0."
msgstr ""
"log10(x), uka wakichataxa x chaniru base 10 wakichatampi algoritmo chanipa "
"kuttayi. Uka chanitakixa 10^y chanipaxa x chanipa khuskhakiwa. Ukasti "
"akhamataki x>=0."

#: functions.py:388
msgid "Can only calculate x modulo <integer>"
msgstr "Ukasti x módulo wakichatampikiwa chanichasispa <integer>"

#: functions.py:390
msgid ""
"mod(x, y), return the modulus of x with respect to y.This is the remainder "
"after dividing x by y."
msgstr ""

#: functions.py:399
msgid "mul(x, y), return x * y"
msgstr "mul(x, y), uka wakichataxa x * y chanipa kuttayi"

#: functions.py:404
msgid "negate(x), return -x"
msgstr "negate(x), uka wakichataxa -x chani kuttayani"

#: functions.py:410
msgid ""
"Or(x, y), logical or. Returns True if x or y is True, else returns False"
msgstr ""
"Or(x, y), 'o' logico, uka wakichataxa niyaki x jani/ukaxa y chiqapipana "
"chiqpacha kuttayani. Jani ukhamipana Jani chiqapa kuttayani"

#: functions.py:427
msgid "pow(x, y), return x to the power y (x**y)"
msgstr "pow(x, y), uka wakichataxa x chani y chani payachasawa (x**y) kuttayi"

#: functions.py:433
msgid "rand_float(), return a random floating point number between 0.0 and 1.0"
msgstr ""
"rand_float(), uka wakichataxa 0.0 wakisiriru punti flotante aleatorio jakhu "
"chanipa kuttayi ukata 1.0"

#: functions.py:439
msgid ""
"rand_int([<maxval>]), return a random integer between 0 and <maxval>. "
"<maxval> is an optional argument and is set to 65535 by default."
msgstr ""
"rand_int([<maxval>]), uka wakichataxa 0 ukata chani entero aleatorio kuttayi "
"ukasti wakisiri qhananchatarjama, ukana chanipaxa 65535, akatjamata "
"uñasitapata."

#: functions.py:445
msgid "round(x), return the integer nearest to x."
msgstr "round(x), uka wakichataxa x chani jak'ankiri phuqata jakhu kuttayi."

#: functions.py:452 functions.py:461
msgid "Bitwise operations only apply to integers"
msgstr "Uka bits chanichañanakaxa parisa jakhunakampikiwa phuqasi"

#: functions.py:454
msgid "shift_left(x, y), shift x by y bits to the left (multiply by 2 per bit)"
msgstr ""
"shift_left(x, y), uka wakichataxa x chaniru y chanipampiwa ch'iqaru "
"jithjtayi (sapa bit chaniru 2 jakhumpi jakhsuma)"

#: functions.py:463
msgid "shift_right(x, y), shift x by y bits to the right (divide by 2 per bit)"
msgstr ""
"shift_right(x, y), uka wakichataxa x chaniru y chanipampiwa ch'iqaru "
"jithjtayi (sapa bit chaniru 2 jakhumpi jaljtayma)"

#: functions.py:469
msgid ""
"sin(x), return the sine of x. This is the y-coordinate on the unit circle at "
"the angle x"
msgstr ""
"sin(x), uka wakichataxa x chaniru seno chani kuttayi. Ukawa y chanina "
"coordinada chanipaxa ukasti maya sapa muyuna x k'uchuna"

#: functions.py:476
msgid ""
"sinh(x), return the hyperbolic sine of x. Given by (exp(x) - exp(-x)) / 2"
msgstr ""
"inh(x), kutiyiwa x ukata seno hiperbolico. (exp(x) - exp(-x)) / 2 ukampi "
"churata"

#: functions.py:485
msgid "sinc(x), return the sinc of x. This is given by sin(x) / x."
msgstr "sinc(x), kutiyiwa seno cardinal x ukata. sin(x) / x ukampi churata."

#: functions.py:491
msgid ""
"sqrt(x), return the square root of x. This is the value for which the square "
"equals x. Defined for x >= 0."
msgstr ""
"sqrt(x) kituyiwa x raiz cuadrada chanipa. axa Aka chanixa Kikipakiwa x "
"ukampi.x >= 0 ukatakiwa."

#: functions.py:497
msgid "square(x), return x * x"
msgstr "cuadrado(x), kutiyiwa x * x"

#: functions.py:505
msgid "sub(x, y), return x - y"
msgstr "sub(x, y), kutiyiwa x - y"

#: functions.py:511
msgid ""
"tan(x), return the tangent of x. This is the slope of the line from the "
"origin of the unit circle to the point on the unit circle defined by the "
"angle x. Given by sin(x) / cos(x)"
msgstr ""
"tan(x), kutiyaniwa tangente x chanipa. akaxa Chiqaru amsta sapa muyu "
"qalltuta x k'uchuta muyu chanich'atkama. sin(x) / cos(x) ukampi churata"

#: functions.py:519
msgid "tanh(x), return the hyperbolic tangent of x. Given by sinh(x) / cosh(x)"
msgstr ""
"tanh(x), kutiyaniwa tangente hiperbolica x chanita. sinh(x) / cosh(x) ukampi "
"churata"

#: functions.py:525
msgid ""
"xor(x, y), logical xor. Returns True if either x is True (and y is False) or "
"y is True (and x is False), else returns False"
msgstr ""
"xor(x, y), xor logico. chiqapa kutiyaniniwa x chani chiqapipana (y k'aripana)"
" jani ukasti y chiqapipana ( x es k'aripana), jani ukasti kutiyaniniwa k'ari"

#: toolbars.py:57
msgid "Help"
msgstr "Yanapt'awi"

#: toolbars.py:132
msgid "Copy"
msgstr "Talliqaña"

#: toolbars.py:133
msgid "<ctrl>c"
msgstr "<ctrl>c"

#: toolbars.py:137
msgid "Cut"
msgstr "Apaqaña"

#: toolbars.py:140
msgid "<ctrl>x"
msgstr "<ctrl>x"

#: toolbars.py:148
msgid "Paste"
msgstr "Lip'iyaña"

#: toolbars.py:160
msgid "Square"
msgstr "Payanchaña"

#: toolbars.py:167
msgid "Square root"
msgstr "Raíz cuadrada"

#: toolbars.py:174
msgid "Inverse"
msgstr "Maysapa"

#: toolbars.py:183
msgid "e to the power x"
msgstr "e piq'inchaña x ukaru"

#: toolbars.py:190
msgid "x to the power y"
msgstr "x piq'inchaña y ukaru"

#: toolbars.py:197
msgid "Natural logarithm"
msgstr "Logaritmo wakichata"

#: toolbars.py:206
msgid "Factorial"
msgstr "Factorial"

#: toolbars.py:220
msgid "Sine"
msgstr "Seno wakichata"

#: toolbars.py:225
msgid "Cosine"
msgstr "Coseno wakichata"

#: toolbars.py:230
msgid "Tangent"
msgstr "Tangente wakichata"

#: toolbars.py:237
msgid "Arc sine"
msgstr "Arcoseno wakichata"

#: toolbars.py:242
msgid "Arc cosine"
msgstr "Arcocoseno wakichata"

#: toolbars.py:247
msgid "Arc tangent"
msgstr "Arcotangente wakichata"

#: toolbars.py:254
msgid "Hyperbolic sine"
msgstr "Seno hiperbólico wakichata"

#: toolbars.py:259
msgid "Hyperbolic cosine"
msgstr "Coseno hiperbólico wakichata"

#: toolbars.py:264
msgid "Hyperbolic tangent"
msgstr "Tangente hiperbólica wakichata"

#: toolbars.py:277
msgid "Logical and"
msgstr "Y lógico wakichata"

#: toolbars.py:282
msgid "Logical or"
msgstr "O lógico wakichata"

#: toolbars.py:293
msgid "Equals"
msgstr "Kikipa"

#: toolbars.py:297
msgid "Not equals"
msgstr "Mayja"

#: toolbars.py:310
msgid "Pi"
msgstr "Pi chimpu"

#: toolbars.py:316
msgid "e"
msgstr "e chimpu"

#: toolbars.py:320
msgid "γ"
msgstr "γ chimpu"

#: toolbars.py:325
msgid "φ"
msgstr "φ chimpu"

#: toolbars.py:333
msgid "Plot"
msgstr "Jirsüwi"

#: toolbars.py:338
msgid "Degrees"
msgstr "Grados wakichata"

#: toolbars.py:339
msgid "Radians"
msgstr "Radianes wakichata"

#: toolbars.py:344
msgid "Degrees / Radians"
msgstr "Grados / Radianes wakichata"

#: toolbars.py:354
msgid "Exponent / Scientific notation"
msgstr "Exponente / Notación científica wakichata"

#: toolbars.py:365
msgid "Number of shown digits"
msgstr "Jakhunakana jakhupa uñachayata"

#: toolbars.py:377
msgid "Integer formatting base"
msgstr "Jhakhunaka kayuncha"

#: astparser.py:39
msgid ""
"plot(eqn, var=-a..b), plot the equation 'eqn' with the variable 'var' in the "
"range from a to b"
msgstr ""
"plot(eqn, var=-a..b), 'eqn' jakhjaña apsuña uka 'var' sata wakisiri "
"mayjt'ayirinakampi, ukata 'a' ukata 'b' wakichatkama"

#: astparser.py:61
#, python-format
msgid "Parse error at %d"
msgstr "Wakichatanaka apsuñana pantjata %d"

#: astparser.py:75 astparser.py:109
#, python-format
msgid "Error at '%s', position: %d"
msgstr ""

#: astparser.py:88
msgid "Syntax Error."
msgstr ""

#: astparser.py:95
msgid "Syntax Error!"
msgstr ""

#: astparser.py:135
msgid "This is just a test topic, use help(index) for the index"
msgstr ""
"Akawa yant'äwina maya yatxataña wakichataxa, yanapt'äwi (qalltaña) wakichata "
"apnaqasa qalltma"

#: astparser.py:148
msgid "Use help(test) for help about 'test', or help(index) for the index"
msgstr ""
"Yanaptäwi (jiskht'äwinaka) apnaqama uka jiskht'äwinaka tuqita yanapañataki, "
"jani ukaxa yanapt'äwi (qalltaña) apnaqasa wakichatanakampi qalltañataki"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:152
msgid "index"
msgstr "qalltäwi"

#: astparser.py:152
msgid "topics"
msgstr "amtäwinaka"

#: astparser.py:153
msgid "Topics"
msgstr "Amuytäwinaka"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:161
msgid "variables"
msgstr "mayjt'ayirinaka"

#: astparser.py:162
msgid "Variables"
msgstr "Mayjt'ayirinaka"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:168
msgid "functions"
msgstr "wakisirinaka"

#: astparser.py:169
msgid "Functions"
msgstr "Wakisirinaka"

#: astparser.py:178
#, python-format
msgid "No help about '%s' available, use help(index) for the index"
msgstr ""
"Uka tuqita janiwa yanapt'axa utjiti '%s', yanapt'iri (qalltaña) apnaqma "
"wakichatanakampi qalltañataki"

#: astparser.py:508
msgid "help"
msgstr "yanapt'äwi"

#: astparser.py:515
msgid "Recursion detected"
msgstr "T'aqaqtäwi katjaña"

#: astparser.py:539
#, python-format
msgid "Function '%s' not defined"
msgstr "Uka wakisirixa '%s' jukha chaniru jani qhanstayiti"

#: astparser.py:541
#, python-format
msgid "Variable '%s' not defined"
msgstr "Mayjt'ayirixa '%s' jukha chaniru jani qhanstayiti"

#: astparser.py:551
#, python-format
msgid "Attribute '%s' does not exist"
msgstr "Ch'amanchiri '%s' janiwa qhanstiti"

#: astparser.py:654
msgid "Parse error"
msgstr "Wakichäwinaka pantjata"

#: astparser.py:659
msgid "Multiple statements not supported"
msgstr "Kunaymana amuyunakaxa janiwa suma katuqatati"

#: astparser.py:683
msgid "Internal error"
msgstr "Wakichäwi taypina pantjata"

#  "×"
#. TRANS: multiplication symbol (default: '×')
#: mathlib.py:84
msgid "mul_sym"
msgstr "\"×\" chimpu"

#  "÷"
#. TRANS: division symbol (default: '÷')
#: mathlib.py:89
msgid "div_sym"
msgstr "\"÷\" chimpu"

#. TRANS: equal symbol (default: '=')
#: mathlib.py:94
msgid "equ_sym"
msgstr "\"=\""

#: mathlib.py:227
msgid "Undefined"
msgstr "Jani amuyata"

#: mathlib.py:237
msgid "Error: unsupported type"
msgstr "Pantjata: kut'ayata casta"

#: layout.py:113
msgid "Clear"
msgstr "Pichsuña"

#: layout.py:151 layout.py:195
msgid "Edit"
msgstr "Chiqachaña"

#: layout.py:156 layout.py:196
msgid "Algebra"
msgstr "Algebra"

#: layout.py:161 layout.py:198
msgid "Trigonometry"
msgstr "Trigonometría"

#: layout.py:166 layout.py:199
msgid "Boolean"
msgstr "Booleano wakichata"

#: layout.py:175 layout.py:200
msgid "Miscellaneous"
msgstr "Kunaymana"

#: layout.py:229
msgid "Label:"
msgstr "Chimpunaka:"

#: layout.py:278
msgid "All equations"
msgstr "Qawayata ecuaciones"

#: layout.py:279
msgid "My equations"
msgstr "Nayana wakichata ecuaciones"

#: layout.py:280
msgid "Show variables"
msgstr "Variable Uñachayaña"

#: calculate.py:109
#, python-format
msgid "Equation.parse() string invalid (%s)"
msgstr "Equation.parse() sata wakichäwi saräwi sayt'ayata (%s)"

#: calculate.py:525
msgid "Can not assign label: will cause recursion"
msgstr "Sutiyaña chimpu janiwa uchayasiti: T'aqasïwimpiwa sayt'ani"

#: calculate.py:620
#, python-format
msgid "Writing to journal (%s)"
msgstr "Sapüru wakichäwinaka qillqthapisa (%s)"

#: calculate.py:932
msgid "button_pressed(): invalid type"
msgstr "button_pressed(): sata wakichata sayt'ayata"

#~ msgid ""
#~ "This is the place to get the answer to a quick problem, but that is not the "
#~ "limit! You can also explore Algebra, Trigonometry, Boolean and more!"
#~ msgstr ""
#~ "Aka chiqawa jani walt'äwi chiqachañatakixa, ukata janiwa uka mayakïkiti. "
#~ "Algebra wakichata thaqarakismawa. Trigonometría, Booleanos, ukata "
#~ "yaqhanakampi"

#, python-format
#~ msgid "Error at %d"
#~ msgstr "Pantjata %d"

#~ msgid "fac"
#~ msgstr "'fac' sata wakichatanaka"

#~ msgid ""
#~ "And(x, y), logical and. Returns True if x and y are True, else returns False"
#~ msgstr ""
#~ "And(x, y), ukasti chiqapawa. Chiqapa kuttayiwa kunapachatixa 'x' ukata 'y' "
#~ "wakisirinakapa chiqapipana, jani ukhamipana uka Jani chiqapa wakichatawa "
#~ "kutinispa"

#~ msgid "Number does not look binary in base 10"
#~ msgstr "Uka jakhuxa base 10 wakisiripana janiwa payachasiti"

#~ msgid ""
#~ "cosh(x), return the hyperbolic cosine of x. Given by (exp(x) + exp(-x)) / 2"
#~ msgstr ""
#~ "cosh(x), x katuru coseno hiperbólico chanipa kuttayi. Ukasti akhamawa(exp(x) "
#~ "+ exp(-x)) / 2"

#~ msgid "fac(x), return the factorial of x. Given by x * (x - 1) * (x - 2) * ..."
#~ msgstr ""
#~ "fac(x), uka wakichataxa x factorial chanipa kuttayi. Ukasti akhamata "
#~ "phuqasiraki x * (x - 1) * (x - 2) * ..."

#~ msgid ""
#~ "mod(x, y), return the modulus of x with respect to y. This is the remainder "
#~ "after dividing x by y."
#~ msgstr ""
#~ "mod(x, y), uka wakichataxa x módulo wakichata chani uka y chanipata sipana "
#~ "kuttayi. Ukasti misturakiwa x chanimpi y chanimpi jaljayasa."
