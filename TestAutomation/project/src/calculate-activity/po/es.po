# POT file for the Calculate activity
# Copyright (C) 2007
# This file is distributed under the same license as the Calculate package.
# Reinier Heeres <reinier@heeres.eu>, 2007
# Translations by Rafael Enrique Ortiz Guerrero
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-24 17:39+1100\n"
"PO-Revision-Date: 2017-03-27 00:01+0000\n"
"Last-Translator: Alan <alanjas@hotmail.com>\n"
"Language-Team: Spanish\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Pootle 2.5.1.1\n"
"X-POOTLE-MTIME: 1490572907.000000\n"

#: activity/activity.info:2
msgid "Calculate"
msgstr "Calcular"

#: functions.py:35
msgid "add"
msgstr "sum"

#: functions.py:36
msgid "abs"
msgstr "abs"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:37
msgid "acos"
msgstr "acos"

# TRANS: It is possible to translate commands. However, I would highly
# recommend NOT doing so for mathematical functions like cos(). help(),
# functions() etc should be translated.
#: functions.py:38
msgid "acosh"
msgstr "acosh"

#: functions.py:39
msgid "asin"
msgstr "asin"

#: functions.py:40
msgid "asinh"
msgstr "asinh"

#: functions.py:41
msgid "atan"
msgstr "atan"

#: functions.py:42
msgid "atanh"
msgstr "atanh"

#: functions.py:43
msgid "and"
msgstr "and"

#: functions.py:44
msgid "b10bin"
msgstr "b10bin"

#: functions.py:45
msgid "ceil"
msgstr "cell"

#: functions.py:46
msgid "cos"
msgstr "cos"

#: functions.py:47
msgid "cosh"
msgstr "cosh"

#: functions.py:48
msgid "div"
msgstr "div"

#: functions.py:49
msgid "gcd"
msgstr "mcd"

#: functions.py:50
msgid "exp"
msgstr "exp"

#: functions.py:51
msgid "factorial"
msgstr "factorial"

#: functions.py:52
msgid "factorize"
msgstr "factorizar"

#: functions.py:53
msgid "floor"
msgstr "piso"

#: functions.py:54
msgid "inv"
msgstr "inv"

#: functions.py:55
msgid "is_int"
msgstr "is_int"

#: functions.py:56
msgid "is_prime"
msgstr "es_primo"

#: functions.py:57
msgid "ln"
msgstr "ln"

#: functions.py:58
msgid "log10"
msgstr "log10"

#: functions.py:59
msgid "mul"
msgstr "mul"

#: functions.py:60
msgid "or"
msgstr "or"

#: functions.py:61
msgid "rand_float"
msgstr "rand_float"

#: functions.py:62
msgid "rand_int"
msgstr "rand_int"

#: functions.py:63
msgid "round"
msgstr "redondeo"

#: functions.py:64
msgid "sin"
msgstr "sin"

#: functions.py:65
msgid "sinh"
msgstr "sinh"

#: functions.py:66
msgid "sinc"
msgstr "sinc"

#: functions.py:67
msgid "sqrt"
msgstr "sqrt"

#: functions.py:68
msgid "sub"
msgstr "sub"

#: functions.py:69
msgid "square"
msgstr "cuadrado"

#: functions.py:70
msgid "tan"
msgstr "tan"

#: functions.py:71
msgid "tanh"
msgstr "tanh"

#: functions.py:72
msgid "xor"
msgstr "xor"

# y x si x > 0 (por definición de valor absoluto) -> falta en el original
#: functions.py:119
msgid "abs(x), return absolute value of x, which means -x for x < 0"
msgstr "abs(x), devuelve el valor absoluto de x, que significa -x si x < 0"

#: functions.py:124
msgid "acos(x) only defined for x E [-1,1]"
msgstr "acos(x) solo definido para x E [-1,1]"

#: functions.py:128
msgid ""
"acos(x), return the arc cosine of x. This is the angle for which the cosine "
"is x. Defined for -1 <= x < 1"
msgstr ""
"acos(x), devuelve el arco coseno de x. Este es el ángulo para el cual el "
"coseno es x. Definido para -1 <= x < 1"

#: functions.py:135
msgid ""
"acosh(x), return the arc hyperbolic cosine of x. This is the value y for "
"which the hyperbolic cosine equals x."
msgstr ""
"acosh(x), devuelve el arco coseno hiperbólico de x. Este es el valor de y "
"para el cual el coseno hiperbólico es x."

#: functions.py:142
msgid ""
"And(x, y), logical and. Returns True if x and y are True,else returns False"
msgstr ""
"And(x, y), suma lógica. Devuelve Verdadero si x e y son Verdaderos, en otro "
"caso devuelve Falso."

#: functions.py:151
msgid "add(x, y), return x + y"
msgstr "sum(x, y), devuelta x + y"

#: functions.py:156
msgid "asin(x) only defined for x E [-1,1]"
msgstr "asin(x) solo definido para x E [-1,1]"

#: functions.py:159
msgid ""
"asin(x), return the arc sine of x. This is the angle for which the sine is "
"x. Defined for -1 <= x <= 1"
msgstr ""
"asin(x), Devuelve el arco seno de x. Este es el ángulo para el cual el seno "
"es x. Definido para -1<=x<=1"

#: functions.py:166
msgid ""
"asinh(x), return the arc hyperbolic sine of x. This is the value y for which "
"the hyperbolic sine equals x."
msgstr ""
"asinh(x), devuelve el arco ceno hiperbólico de x. Este es el valor de y para "
"el cual el seno hiperbólico es x."

#: functions.py:173
msgid ""
"atan(x), return the arc tangent of x. This is the angle for which the "
"tangent is x. Defined for all x"
msgstr ""
"atan(x), Devuelve el arco tangente de x. Este es el ángulo para el cual la "
"tangente es x. Definido para todas las x"

#: functions.py:180
msgid ""
"atanh(x), return the arc hyperbolic tangent of x. This is the value y for "
"which the hyperbolic tangent equals x."
msgstr ""
"atanh(x), devuelve el arco tangente hiperbólico de x. Este es el valor de y "
"para el cual el tangente hiperbólico es x."

#: functions.py:191
msgid "Number does not look binary."
msgstr "El número no parece binario."

#: functions.py:199
msgid ""
"b10bin(x), interpret a number written in base 10 as binary, e.g.: "
"b10bin(10111) = 23,"
msgstr ""
"b10bin(x), interpreta un número escrito en base 10 como binario, ej.: "
"b10bin(10111) = 23,"

#: functions.py:205
msgid "ceil(x), return the smallest integer larger than x."
msgstr "ceil(x), devuelve el menor entero mayor que x."

#: functions.py:211
msgid ""
"cos(x), return the cosine of x. This is the x-coordinate on the unit circle "
"at the angle x"
msgstr ""
"cos(x), devuelve el coseno de x. Esta es la coordenada x en el círculo "
"unitario con ángulo x"

#: functions.py:218
msgid ""
"cosh(x), return the hyperbolic cosine of x.Given by (exp(x) + exp(-x)) / 2"
msgstr ""
"cosh(x), devuelve el coseno hiperbólico de x. Dado por (exp(x) + exp(-x)) / 2"

#: functions.py:224 functions.py:319
msgid "Can not divide by zero"
msgstr "No se puede dividir por cero"

#: functions.py:247
msgid "Invalid argument"
msgstr "Argumento no válido"

#: functions.py:250
msgid ""
"gcd(a, b), determine the greatest common denominator of a and b. For "
"example, the biggest factor that is shared by the numbers 15 and 18 is 3."
msgstr ""
"gcd(a, b), determina el máximo común divisor entre a y b. Por ejemplo, el "
"factor más grande que divide a los números 15 y 18 es 3."

#: functions.py:257
msgid "exp(x), return the natural exponent of x. Given by e^x"
msgstr "exp(x), devuelve el exponente natural de x. Dado por e^x"

#: functions.py:262
msgid "Factorial(x) is only defined for integers x>=0"
msgstr "Factorial(x) solo esta definido para enteros x>=0"

#: functions.py:265
msgid "Factorial only defined for integers"
msgstr "Factorial solo esta definido para enteros"

#: functions.py:278
msgid ""
"factorial(n), return the factorial of n. Given by n * (n - 1) * (n - 2) * ..."
msgstr ""
"factorial(x), devuelve el factorial de x. Dado por x * (x - 1) * (x - 2) * "
"..."

#: functions.py:314
msgid "floor(x), return the largest integer smaller than x."
msgstr "floor(x), devuelve el mayor entero menor que x."

#: functions.py:321
msgid "inv(x), return the inverse of x, which is 1 / x"
msgstr "inv(x), devuelve el inverso de x, que es 1 / x"

#: functions.py:356
msgid "Argument must be int"
msgstr "El argumento debe ser entero"

#: functions.py:358
msgid "Prime numbers is defined for natural numbers"
msgstr "Los números primos están definidos por números naturales"

#: functions.py:368 functions.py:378
msgid "Logarithm(x) only defined for x > 0"
msgstr "Logarithm(x) solo definido para x > 0"

#: functions.py:370
msgid ""
"ln(x), return the natural logarithm of x. This is the value for which the "
"exponent exp() equals x. Defined for x >= 0."
msgstr ""
"ln(x), devuelve el algoritmo natural de x. Este es el valor para el cual el "
"exponente exp() es igual a x. Definido para x >= 0."

#: functions.py:380
msgid ""
"log10(x), return the base 10 logarithm of x. This is the value y for which "
"10^y equals x. Defined for x >= 0."
msgstr ""
"log10(x), devuelve el logaritmo en base 10 de x. Este es el valor para el "
"cual 10^y es igual a x. Definido para x >= 0."

# integer es del código o aparece en pantalla?
#: functions.py:388
msgid "Can only calculate x modulo <integer>"
msgstr "Solo se puede calcular x módulo <integer>"

#: functions.py:390
msgid ""
"mod(x, y), return the modulus of x with respect to y.This is the remainder "
"after dividing x by y."
msgstr ""
"mod(x, y), devuelve el módulo de x respecto de y. Esto es el resto de "
"dividir x por y."

#: functions.py:399
msgid "mul(x, y), return x * y"
msgstr "mul(x, y), devuelve x * y"

# devuelve el "opuesto"
#: functions.py:404
msgid "negate(x), return -x"
msgstr "negate(x), devuelve -x"

#: functions.py:410
msgid ""
"Or(x, y), logical or. Returns True if x or y is True, else returns False"
msgstr ""
"Or(x, y), 'o' logico, Devuelve Verdadero si x y/o y es verdadero, de lo "
"contrario devuelve Falso"

# x elevado a la y ésima potencia
#: functions.py:427
msgid "pow(x, y), return x to the power y (x**y)"
msgstr "pow(x, y), devuelve x a la potencia y (x**y)"

#: functions.py:433
msgid "rand_float(), return a random floating point number between 0.0 and 1.0"
msgstr ""
"rand_float(), retorna un numero de punto flotante aleatorio entre 0.0 y 1.0"

#: functions.py:439
msgid ""
"rand_int([<maxval>]), return a random integer between 0 and <maxval>. "
"<maxval> is an optional argument and is set to 65535 by default."
msgstr ""
"rand_int([<maxval>]), retorna un valor entero aleatorio entre 0 y <maxval>. "
"<maxval> is un argumento opcional y tiene valor 65535 por defecto."

#: functions.py:445
msgid "round(x), return the integer nearest to x."
msgstr "round(x), retorna el entero mas cercano a x."

#: functions.py:452 functions.py:461
msgid "Bitwise operations only apply to integers"
msgstr "Operaciones sobre bits solo se aplican a enteros"

#: functions.py:454
msgid "shift_left(x, y), shift x by y bits to the left (multiply by 2 per bit)"
msgstr ""
"shift_left(x, y), desplaza a la izquierda x por y bits (multiplica por 2 por "
"cada bit)"

#: functions.py:463
msgid "shift_right(x, y), shift x by y bits to the right (divide by 2 per bit)"
msgstr ""
"shift_right(x, y), desplaza a la derecha x por y bits (divide por 2 por cada "
"bit)"

#: functions.py:469
msgid ""
"sin(x), return the sine of x. This is the y-coordinate on the unit circle at "
"the angle x"
msgstr ""
"sin(x), devuelve el seno de x. Esta es la coordinada y en el circulo "
"unitario en el angulo x"

#: functions.py:476
msgid ""
"sinh(x), return the hyperbolic sine of x. Given by (exp(x) - exp(-x)) / 2"
msgstr ""
"sinh(x), devuelve el seno hiperbolico de x. Dado por (exp(x) - exp(-x)) / 2"

#: functions.py:485
msgid "sinc(x), return the sinc of x. This is given by sin(x) / x."
msgstr "sinc(x), devuelve el seno cardinal de x. Dado por sin(x) / x."

#: functions.py:491
msgid ""
"sqrt(x), return the square root of x. This is the value for which the square "
"equals x. Defined for x >= 0."
msgstr ""
"sqrt(x), Devuelve la raiz cuadrada de x. Este es el valor para el cual el "
"cuadrado equivale a x. Definido para x >= 0."

#: functions.py:497
msgid "square(x), return x * x"
msgstr "cuadrado(x), devuelve x * x"

#: functions.py:505
msgid "sub(x, y), return x - y"
msgstr "sub(x, y), devuelve x - y"

#: functions.py:511
msgid ""
"tan(x), return the tangent of x. This is the slope of the line from the "
"origin of the unit circle to the point on the unit circle defined by the "
"angle x. Given by sin(x) / cos(x)"
msgstr ""
"tan(x), Devuelve la tangente de x. Esta es la pendiente de la línea desde el "
"origen del circulo unitario hasta el punto en el circulo definido por el "
"angulo x. Dado por sin(x) / cos(x)"

# English text is incorrect
#: functions.py:519
msgid "tanh(x), return the hyperbolic tangent of x. Given by sinh(x) / cosh(x)"
msgstr ""
"tanh(x), devuelve la tangente hiperbolica de x. Dado por sinh(x) / cosh(x)"

#: functions.py:525
msgid ""
"xor(x, y), logical xor. Returns True if either x is True (and y is False) or "
"y is True (and x is False), else returns False"
msgstr ""
"xor(x, y), xor logico. Devuelve Verdadero si x es verdadero (y y es Falso) o "
"si y es Verdadero (y X es Falso), de lo contrario devuelve Falso"

#: toolbars.py:57
msgid "Help"
msgstr "Ayuda"

#: toolbars.py:132
msgid "Copy"
msgstr "Copiar"

#: toolbars.py:133
msgid "<ctrl>c"
msgstr "<ctrl>c"

#: toolbars.py:137
msgid "Cut"
msgstr "Cortar"

#: toolbars.py:140
msgid "<ctrl>x"
msgstr "<ctrl>x"

#: toolbars.py:148
msgid "Paste"
msgstr "Pegar"

#: toolbars.py:160
msgid "Square"
msgstr "Cuadrado"

#: toolbars.py:167
msgid "Square root"
msgstr "Raíz cuadrada"

#: toolbars.py:174
msgid "Inverse"
msgstr "Inversa"

#: toolbars.py:183
msgid "e to the power x"
msgstr "e a la potencia x"

#: toolbars.py:190
msgid "x to the power y"
msgstr "x a la potencia y"

#: toolbars.py:197
msgid "Natural logarithm"
msgstr "Logaritmo natural"

#: toolbars.py:206
msgid "Factorial"
msgstr "Factorial"

#: toolbars.py:220
msgid "Sine"
msgstr "Seno"

#: toolbars.py:225
msgid "Cosine"
msgstr "Coseno"

#: toolbars.py:230
msgid "Tangent"
msgstr "Tangente"

#: toolbars.py:237
msgid "Arc sine"
msgstr "Arcoseno"

#: toolbars.py:242
msgid "Arc cosine"
msgstr "Arcocoseno"

#: toolbars.py:247
msgid "Arc tangent"
msgstr "Arcotangente"

#: toolbars.py:254
msgid "Hyperbolic sine"
msgstr "Seno hiperbólico"

#: toolbars.py:259
msgid "Hyperbolic cosine"
msgstr "Coseno hiperbólico"

#: toolbars.py:264
msgid "Hyperbolic tangent"
msgstr "Tangente hiperbólica"

#: toolbars.py:277
msgid "Logical and"
msgstr "Y lógico"

#: toolbars.py:282
msgid "Logical or"
msgstr "O lógico"

#: toolbars.py:293
msgid "Equals"
msgstr "Igual"

#: toolbars.py:297
msgid "Not equals"
msgstr "No-igual"

#: toolbars.py:310
msgid "Pi"
msgstr "Pi"

#: toolbars.py:316
msgid "e"
msgstr "e"

#: toolbars.py:320
msgid "γ"
msgstr "Y"

#: toolbars.py:325
msgid "φ"
msgstr "φ"

#: toolbars.py:333
msgid "Plot"
msgstr "Gráfico"

#: toolbars.py:338
msgid "Degrees"
msgstr "Grados"

#: toolbars.py:339
msgid "Radians"
msgstr "Radianes"

#: toolbars.py:344
msgid "Degrees / Radians"
msgstr "Grados / Radianes"

#: toolbars.py:354
msgid "Exponent / Scientific notation"
msgstr "Exponente / Notación científica"

#: toolbars.py:365
msgid "Number of shown digits"
msgstr "Número de dígitos visibles"

#: toolbars.py:377
msgid "Integer formatting base"
msgstr "Base numérica"

#: astparser.py:39
msgid ""
"plot(eqn, var=-a..b), plot the equation 'eqn' with the variable 'var' in the "
"range from a to b"
msgstr ""
"plot(eqn, var=-a..b), grafica de la ecuación 'eqn' con la variable 'var' en "
"el rango de a hasta b"

#: astparser.py:61
#, python-format
msgid "Parse error at %d"
msgstr "Error de procesamiento en %d"

#: astparser.py:75 astparser.py:109
#, python-format
msgid "Error at '%s', position: %d"
msgstr "Error en '%s', posición: %d"

#: astparser.py:88
msgid "Syntax Error."
msgstr "Error de Sintaxis."

#: astparser.py:95
msgid "Syntax Error!"
msgstr "¡Error de Sintaxis!"

#: astparser.py:135
msgid "This is just a test topic, use help(index) for the index"
msgstr "Este es solo un topico de prueba, use help(indice) para el indice"

#: astparser.py:148
msgid "Use help(test) for help about 'test', or help(index) for the index"
msgstr ""
"Use help(test) para ayuda acerca de 'test', o help(indice) para el indice"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:152
msgid "index"
msgstr "índice"

# End of help topics
#: astparser.py:152
msgid "topics"
msgstr "temas"

# End of help topics
#: astparser.py:153
msgid "Topics"
msgstr "Temas"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:161
msgid "variables"
msgstr "variables"

#: astparser.py:162
msgid "Variables"
msgstr "Variables"

#. TRANS: This command is descriptive, so can be translated
#: astparser.py:168
msgid "functions"
msgstr "funciones"

#: astparser.py:169
msgid "Functions"
msgstr "Funciones"

# should the command 'help(index)' be translated?
#: astparser.py:178
#, python-format
msgid "No help about '%s' available, use help(index) for the index"
msgstr "No hay ayuda disponible sobre '%s', use ayuda(índice) para el índice"

#: astparser.py:508
msgid "help"
msgstr "ayuda"

#: astparser.py:515
msgid "Recursion detected"
msgstr "Recursión detectada"

#: astparser.py:539
#, python-format
msgid "Function '%s' not defined"
msgstr "La función '%s' no está definida"

#: astparser.py:541
#, python-format
msgid "Variable '%s' not defined"
msgstr "La variable '%s' no está definida"

#: astparser.py:551
#, python-format
msgid "Attribute '%s' does not exist"
msgstr "El atributo «%s» no existe"

#: astparser.py:654
msgid "Parse error"
msgstr "Error de procesamiento"

#: astparser.py:659
msgid "Multiple statements not supported"
msgstr "No se permite hacer declaraciones múltiples"

#: astparser.py:683
msgid "Internal error"
msgstr "Error interno"

# Using U+00D7 MULTIPLICATION SIGN
#. TRANS: multiplication symbol (default: '×')
#: mathlib.py:84
msgid "mul_sym"
msgstr "×"

# Using U+00F7 DIVISION SIGN
#. TRANS: division symbol (default: '÷')
#: mathlib.py:89
msgid "div_sym"
msgstr "÷"

#. TRANS: equal symbol (default: '=')
#: mathlib.py:94
msgid "equ_sym"
msgstr "="

#: mathlib.py:227
msgid "Undefined"
msgstr "No-definido"

#: mathlib.py:237
msgid "Error: unsupported type"
msgstr "Error: tipo no soportado"

#: layout.py:113
msgid "Clear"
msgstr "Vaciar"

#: layout.py:151 layout.py:195
msgid "Edit"
msgstr "Editar"

#: layout.py:156 layout.py:196
msgid "Algebra"
msgstr "Álgebra"

#: layout.py:161 layout.py:198
msgid "Trigonometry"
msgstr "Trigonometría"

#: layout.py:166 layout.py:199
msgid "Boolean"
msgstr "Booleano"

#: layout.py:175 layout.py:200
msgid "Miscellaneous"
msgstr "Misceláneos"

#: layout.py:229
msgid "Label:"
msgstr "Etiqueta:"

#: layout.py:278
msgid "All equations"
msgstr "Todas las ecuaciones"

#: layout.py:279
msgid "My equations"
msgstr "Mis ecuaciones"

#: layout.py:280
msgid "Show variables"
msgstr "Mostrar variables"

#: calculate.py:109
#, python-format
msgid "Equation.parse() string invalid (%s)"
msgstr "Equation.parse() cadena no válida (%s)"

#: calculate.py:525
msgid "Can not assign label: will cause recursion"
msgstr "No se puede asignar la etiqueta: causará recursión"

#: calculate.py:620
#, python-format
msgid "Writing to journal (%s)"
msgstr "Escribiendo en el diario (%s)"

#: calculate.py:932
msgid "button_pressed(): invalid type"
msgstr "button_pressed(): tipo invalido"

#~ msgid ""
#~ "This is the place to get the answer to a quick problem, but that is not the "
#~ "limit! You can also explore Algebra, Trigonometry, Boolean and more!"
#~ msgstr ""
#~ "Este es el lugar para obtener respuestas para un problema rápido, pero ese "
#~ "no es el límite. También puedes explorar Álgebra, Trigonometría, Booleanos y "
#~ "más."

#, python-format
#~ msgid "Error at %d"
#~ msgstr "Error en %d"

#~ msgid "fac"
#~ msgstr "fac"

#~ msgid ""
#~ "And(x, y), logical and. Returns True if x and y are True, else returns False"
#~ msgstr ""
#~ "And(x, y), and logico, Devuelve Verdadero si x e y son verdaderos, de lo "
#~ "contrario retorna Falso"

#~ msgid "Number does not look binary in base 10"
#~ msgstr "El número no parece binario en base 10"

#~ msgid ""
#~ "cosh(x), return the hyperbolic cosine of x. Given by (exp(x) + exp(-x)) / 2"
#~ msgstr ""
#~ "cosh(x), devuelve el coseno hiperbólico de x. Dado por (exp(x) + exp(-x)) / "
#~ "2"

#~ msgid "fac(x), return the factorial of x. Given by x * (x - 1) * (x - 2) * ..."
#~ msgstr ""
#~ "fac(x), devuelve el factorial de x. Dado por x * (x - 1) * (x - 2) * ..."

#~ msgid ""
#~ "mod(x, y), return the modulus of x with respect to y. This is the remainder "
#~ "after dividing x by y."
#~ msgstr ""
#~ "mod(x, y), devuelve el módulo de x respecto a y. Esto es el resto de dividir "
#~ "x entre y."
